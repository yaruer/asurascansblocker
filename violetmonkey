// ==UserScript==
// @name         Asura Premium Banner & Popup Remover
// @match        *://asuracomic.net/*
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
  'use strict';

  // Optional: instant CSS to prevent flicker before JS runs
  const css = `
    div.relative.z-50.overflow-hidden:has([aria-label="Close promotion"]) { display:none !important; }
    .fixed.inset-0.bg-gray-900, .fixed.inset-0.bg-opacity-75 { display:none !important; }
    html, body { overflow:auto !important; }
    body.overflow-hidden { overflow:auto !important; }
  `;
  const style = document.createElement('style');
  style.textContent = css;
  (document.head || document.documentElement).appendChild(style);

  function removeBanner() {
    // 1) Remove the premium banner (your snippet shows this exact button)
    document.querySelectorAll('button[aria-label="Close promotion"]').forEach(btn => {
      const banner = btn.closest('div.relative.z-50.overflow-hidden');
      if (banner) banner.remove();
    });

    // 2) Fallback: if a header with the premium text exists, remove its container
    document.querySelectorAll('h1,h2,h3').forEach(h => {
      if (/ASURA\+\s*Premium/i.test(h.textContent) || /Subscription/i.test(h.textContent)) {
        const container =
          h.closest('div.relative.z-50.overflow-hidden') ||
          h.closest('.z-50') ||
          h.closest('[class*="relative"]');
        if (container) container.remove();
      }
    });
  }

  function isFullscreenOverlay(el) {
    const rect = el.getBoundingClientRect();
    const style = getComputedStyle(el);
    const fixed = style.position === 'fixed';
    const covers = rect.width >= window.innerWidth * 0.8 && rect.height >= window.innerHeight * 0.6;
    const highZ = (parseInt(style.zIndex, 10) || 0) >= 50;
    return fixed && covers && highZ;
  }

  function removePopups() {
    // Common premium modal/overlay patterns on Asura (Tailwind classes)
    const selectors = [
      '.overflow-y-auto.p-4.z-50.justify-center.items-center.flex.bg-opacity-75.bg-gray-900.inset-0.fixed',
      '.fixed.inset-0.bg-gray-900',
      '.fixed.inset-0.bg-opacity-75',
      '.popup-overlay',
      '[role="dialog"]'
    ];

    document.querySelectorAll(selectors.join(',')).forEach(el => el.remove());

    // Heuristic catch-all: any big fixed full-screen overlay with high z-index
    document.querySelectorAll('div,section,aside').forEach(el => {
      try { if (isFullscreenOverlay(el)) el.remove(); } catch {}
    });

    // Re-enable scrolling if they tried to lock it
    document.documentElement.style.overflow = '';
    document.body.style.overflow = '';
    document.body.classList.remove('overflow-hidden');
  }

  function clean() {
    removeBanner();
    removePopups();
  }

  function start() {
    clean();
    const obs = new MutationObserver(() => clean());
    obs.observe(document.documentElement, { childList: true, subtree: true });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', start);
  } else {
    start();
  }
})();
